from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import logging
from datetime import datetime

API_TOKEN = '8145775053:AAGPlSdGrLRNbmxvLBRqZGU8BnwlNyTX7SA'

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

group_link = "https://t.me/+JLZTHLGNzn4wYjcy"

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è"))
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç.\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤ –≥—Ä—É–ø–ø—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=kb
    )

@dp.message_handler(lambda message: message.text == "‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è")
async def handle_accept(message: types.Message):
    user_id = message.from_user.id
    log_entry = f"{datetime.now().isoformat()} - User ID: {user_id}\n"
    with open("accepted_users.log", "a") as f:
        f.write(log_entry)
    await message.answer(
        f"üéâ –°–ø–∞—Å–∏–±–æ! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É:\nüëâ {group_link}"
    )

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
